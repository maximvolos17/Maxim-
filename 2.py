import socket  # –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
import threading  # –î–ª—è —Ä–æ–±–æ—Ç–∏ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ (–Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å)
import tkinter as tk  # –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è GUI
from tkinter import simpledialog, messagebox, scrolledtext  # –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
from datetime import datetime  # –î–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–∞—Å—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å

HOST = '127.0.0.1'  # IP-–∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ (–ª–æ–∫–∞–ª—å–Ω–∏–π)
PORT = 65432        # –ü–æ—Ä—Ç –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è

class ChatClient:
    def __init__(self, master):
        self.master = master
        self.master.title("Chat Client")  # –ù–∞–∑–≤–∞ –≤—ñ–∫–Ω–∞

        # üìú –û–±–ª–∞—Å—Ç—å —á–∞—Ç—É (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è)
        self.chat_area = scrolledtext.ScrolledText(master, state='disabled')
        self.chat_area.pack(padx=10, pady=5, fill='both', expand=True)

        # üé® –°—Ç–∏–ª—ñ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: —Å–≤–æ—ó ‚Äî —Å–∏–Ω—ñ, —á—É–∂—ñ ‚Äî –∑–µ–ª–µ–Ω—ñ
        self.chat_area.tag_config("me", foreground="blue")
        self.chat_area.tag_config("others", foreground="green")

        # ‚úçÔ∏è –ú—ñ—Ç–∫–∞, —è–∫–∞ –ø–æ–∫–∞–∑—É—î, —Ö—Ç–æ –∑–∞—Ä–∞–∑ –¥—Ä—É–∫—É—î
        self.typing_label = tk.Label(master, text="", fg="gray")
        self.typing_label.pack(padx=10, pady=(0, 5), anchor='w')

        # üßæ –ü–æ–ª–µ –≤–≤–æ–¥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        self.entry = tk.Entry(master)
        self.entry.pack(padx=10, pady=5, fill='x')
        self.entry.bind("<Return>", self.send_message)  # Enter = –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏
        self.entry.bind("<KeyRelease>", self.on_typing)  # –ü—Ä–∏ –Ω–∞–±–æ—Ä—ñ ‚Äî –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –¥—Ä—É–∫—É

        # üì® –ö–Ω–æ–ø–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
        self.send_button = tk.Button(master, text="Send", command=self.send_message)
        self.send_button.pack(padx=10, pady=5)

        # üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
        self.client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            self.client_socket.connect((HOST, PORT))
        except:
            messagebox.showerror("Connection Error", "Could not connect to server.")  # –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
            self.master.quit()
            return 

        # üßë‚Äçüíº –ó–∞–ø–∏—Ç —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        self.username = simpledialog.askstring("Username", "Enter your username:")
        if not self.username:
            messagebox.showerror("Username Error", "Username cannot be empty.")  # –Ø–∫—â–æ –ø–æ—Ä–æ–∂–Ω—î —ñ–º'—è
            self.master.quit()
            return

        # ‚è± –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –º–æ–º–µ–Ω—Ç—É –Ω–∞–±–æ—Ä—É
        self.last_typing_time = datetime.now()
        self.typing = False
        self.master.after(500, self.check_typing_status)  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –¥—Ä—É–∫—É –∫–æ–∂–Ω—ñ 0.5 —Å–µ–∫

        # üì• –°—Ç–∞—Ä—Ç –ø–æ—Ç–æ–∫—É –ø—Ä–∏–π–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        receive_thread = threading.Thread(target=self.receive_messages, daemon=True)
        receive_thread.start()

    # üöÄ –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    def send_message(self, event=None):
        message = self.entry.get()  # –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–∫—Å—Ç –∑ –ø–æ–ª—è –≤–≤–æ–¥—É
        if message:
            full_message = f"{self.username}: {message}"  # –§–æ—Ä–º–∞—Ç: –Ü–º‚Äô—è: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            try:
                self.client_socket.send(full_message.encode('utf-8'))  # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                self.entry.delete(0, tk.END)  # –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ª–µ –ø—ñ—Å–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
            except:
                messagebox.showerror("Send Error", "Could not send message.")  # –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
                self.master.quit()

    # ‚úçÔ∏è –ú–µ—Ç–æ–¥, —â–æ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å –Ω–∞–±–æ—Ä—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    def on_typing(self, event=None):
        self.last_typing_time = datetime.now()  # –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –Ω–∞–±–æ—Ä—É
        if not self.typing:
            self.typing = True
            try:
                self.client_socket.send(f"{self.username} is typing...<TYPING>".encode('utf-8'))  # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–∞–±—ñ—Ä
            except:
                pass

    # ‚è≥ –ú–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ‚Äî —á–∏ —â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥—Ä—É–∫—É—î
    def check_typing_status(self):
        if self.typing and (datetime.now() - self.last_typing_time).seconds > 2:
            self.typing = False
            try:
                self.client_socket.send(f"{self.username} stopped typing<TYPING>".encode('utf-8'))  # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: –ø–µ—Ä–µ—Å—Ç–∞–≤ –¥—Ä—É–∫—É–≤–∞—Ç–∏
            except:
                pass
        self.master.after(500, self.check_typing_status)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 0.5 —Å–µ–∫

    # üì• –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞
    def receive_messages(self):
        while True:
            try:
                message = self.client_socket.recv(1024).decode('utf-8')  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                if message.endswith("<TYPING>"):  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–∞–±—ñ—Ä —Ç–µ–∫—Å—Ç—É
                    typing_info = message.replace("<TYPING>", "")
                    if "stopped typing" in typing_info:
                        self.typing_label.config(text="")  # –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    else:
                        self.typing_label.config(text=typing_info)  # –ü–æ–∫–∞–∑–∞—Ç–∏: —Ö—Ç–æ—Å—å –¥—Ä—É–∫—É—î
                    continue

                if ":" in message:
                    username, msg = message.split(":", 1)  # –†–æ–∑–¥—ñ–ª–∏—Ç–∏ —ñ–º‚Äô—è —Ç–∞ —Ç–µ–∫—Å—Ç
                    tag = "me" if username == self.username else "others"  # –í–∏–∑–Ω–∞—á–∏—Ç–∏ —Å—Ç–∏–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    current_time = datetime.now().strftime("%H:%M:%S")  # –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
                    display_message = f"[{current_time}] {username}:{msg}"  # –§–æ—Ä–º–∞—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

                    self.chat_area.config(state='normal')  # –£–≤—ñ–º–∫–Ω—É—Ç–∏ –ø–æ–ª–µ
                    self.chat_area.insert(tk.END, display_message + '\n', tag)  # –î–æ–¥–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    self.chat_area.config(state='disabled')  # –ó–Ω–æ–≤—É –≤–∏–º–∫–Ω—É—Ç–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
                    self.chat_area.yview(tk.END)  # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑

                    if tag == "others":
                        self.master.bell()  # –ó–≤—É–∫ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —á—É–∂–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            except:
                messagebox.showerror("Receive Error", "Connection lost.")  # –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ –∑–≤'—è–∑–∫—É
                self.client_socket.close()
                break

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == "__main__":
    root = tk.Tk()
    client = ChatClient(root)
    root.mainloop()
